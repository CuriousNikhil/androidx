/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXUiPlugin

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.0.1"
    }
}

plugins {
    id("AndroidXUiPlugin")
    id("kotlin-multiplatform")
}

apply plugin: 'com.github.node-gradle.node'

AndroidXUiPlugin.applyAndConfigureKotlinPlugin(project)
dependencies {
    kotlinPlugin project(":compose:compiler:compiler")
}

node {
    download = true
}

kotlin {
    js(IR) {
        browser() {
            testTask {
                useKarma {
                    useChromeHeadless()
                }
            }
        }
        binaries.executable()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation project(":compose:runtime:runtime")
                implementation project(":compose:web")
            }
        }

        jsMain {
            dependencies {
                implementation(kotlin("stdlib-js"))
            }
        }

        jsTest {
            dependencies {
                implementation kotlin("test-js")
            }
        }
    }
}

task installBenchmark(type: NpmTask) {
    args = ['--prefix', 'js-framework-benchmark/', 'install']
}

task installWebdriver(type: NpmTask) {
    args = ['--prefix', 'js-framework-benchmark/webdriver-ts', 'install']
}

task buildWebdriver(type: NpmTask) {
    dependsOn installWebdriver
    args = ['--prefix', 'js-framework-benchmark/webdriver-ts', 'run', 'build-prod']
}

task runComposeBenchmark(type: NpmTask) {
    dependsOn buildWebdriver
    args = ['--prefix', 'js-framework-benchmark/webdriver-ts',
            'run', 'benchHeadless', 'non-keyed/compose'
    ]
}

task copyDistToBenchmark(type: Copy) {
    dependsOn jsBrowserDevelopmentWebpack
    from(buildDir.toPath().toString() + "/developmentExecutable")
    into(projectDir.toPath().toString() + "/js-framework-benchmark/frameworks/non-keyed/compose/")
    exclude("/css")
}

task initAndRunBenchmark(type: NpmTask) {
    dependsOn installBenchmark
    dependsOn buildWebdriver
    dependsOn copyDistToBenchmark
    args = ['--prefix', 'js-framework-benchmark/', 'run', 'run-our-benchmark']

    doLast {
        println "See the results in /webdriver-ts/results"
    }
}